basePath: /api/v1
definitions:
  model.TaskRequest:
    properties:
      description:
        example: task description
        type: string
      name:
        example: task name
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/ping:
    get:
      consumes:
      - application/json
      description: Returns pong message to verify API is running
      produces:
      - text/plain
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping endpoint
      tags:
      - health
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TaskRequest'
            type: array
      summary: Get all tasks
      tags:
      - Tasks
  /api/v1/tasks/task:
    get:
      consumes:
      - application/json
      description: do ping
      parameters:
      - description: test
        in: query
        maxLength: 10
        minLength: 5
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskRequest'
      summary: Get Single tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Creates a single task
      parameters:
      - description: data
        in: body
        name: data
        schema:
          $ref: '#/definitions/model.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskRequest'
      summary: Create Single task
      tags:
      - Tasks
  /api/v1/tasks/task/{id}:
    put:
      consumes:
      - application/json
      description: Updates a single task
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaskRequest'
      summary: Create Single task
      tags:
      - Tasks
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
